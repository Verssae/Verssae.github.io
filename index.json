[{"content":"들어가기 Tensorflow, pytorch 등으로 모델을 학습하고 끝날 때 까지 마냥 기다리고만 있을 순 없다.\n가장 간단하게 python 코드 상에서 내 디바이스로 알림을 보내는 방법을 찾아본 결과, Discord Webhook을 사용하는 것이 제일 적합한 것 같았다.\n누군가 Slack Incomming API로 python에서 메시지를 보내는 것에서 영감을 받아, 내가 자주 사용하는 Discord를 사용하여 구현해보고자 했다.\n설치 pip install discord-webhook\n사용법 다양한 예제는 python-discord-webhook을 참고하면 좋다.\nfrom discord_webhook import DiscordWebhook webhook = DiscordWebhook(url=\u0026#39;your webhook url\u0026#39;, content=\u0026#39;Webhook Message\u0026#39;, username=\u0026#39;name of bot\u0026#39;) response = webhook.execute() webhook url은 알림을 받을 discord 서버에서 서버 설정 \u0026gt; 연동 \u0026gt; 웹후크 \u0026gt; 새 웹후크 로 만들고 URL을 복사하면 된다.\nDiscordWebhook 인스턴스를 생성하고 excute를 통해 다음과 같이 서버에 메시지를 보낼 수 있다.\nEmbed Discord bot을 개발해봤다면 알겠지만 Embed를 통해 rich한 데이터들을 메시지와 함께 보낼 수 있다.\nfrom discord_webhook import DiscordEmbed embed = DiscordEmbed(title=\u0026#39;your title\u0026#39;, description=\u0026#39;your desc\u0026#39;, color=\u0026#39;03b2f8\u0026#39;) # set author embed.set_author(name=\u0026#39;Author Name\u0026#39;, url=\u0026#39;author url\u0026#39;, icon_url=\u0026#39;author icon url\u0026#39;) # set image embed.set_image(url=\u0026#39;your image url\u0026#39;) # url만 가능 (local file은 안됨) # set thumbnail embed.set_thumbnail(url=\u0026#39;your thumbnail url\u0026#39;) # url만 가능 (local file은 안됨) # set footer embed.set_footer(text=\u0026#39;Embed Footer Text\u0026#39;, icon_url=\u0026#39;URL of icon\u0026#39;) # set timestamp (default is now) embed.set_timestamp() # add fields to embed embed.add_embed_field(name=\u0026#39;Field 1\u0026#39;, value=\u0026#39;value 1\u0026#39;) embed.add_embed_field(name=\u0026#39;Field 2\u0026#39;, value=\u0026#39;value 2\u0026#39;) # add embed object to webhook webhook.add_embed(embed) response = webhook.execute() 나는 주로 embed의 field를 통해 학습 결과로 나온 수치들을 전송한다.\nembed.add_embed_field(name=\u0026#39;average reward\u0026#39;, value=f\u0026#39;{a.mean():.2f}\u0026#39;) embed.add_embed_field(name=\u0026#39;min\u0026#39;, value=f\u0026#39;{a.min():.2f}\u0026#39;) embed.add_embed_field(name=\u0026#39;max\u0026#39;, value=f\u0026#39;{a.max():.2f}\u0026#39;) plot 결과를 전송하고 싶은데, set_images나 set_thumbnail로는 local 이미지를 전송할 수 없다.\n따라서 이미지를 파일로 먼저 전송한 후, attachement를 이용해 thumbnail을 보낼 수 있다.\nplt.savefig(\u0026#39;result.png\u0026#39;, dpi=300) with open(\u0026#39;result.png\u0026#39;, \u0026#39;rb\u0026#39;) as f: webhook.add_file(file=f.read(), filename=\u0026#39;plot.png\u0026#39;) embed.set_thumbnail(url=\u0026#39;attachment://plot.png\u0026#39;) 이렇게 간단하고 깔끔하게 학습 종료 시 discord 메시지를 전송함으로써 알림을 보낼 수 있다. ","permalink":"https://verssae.github.io/posts/py-discord-webhook/","summary":"Python에서 학습 종료 시 알람을 discord-webhook을 사용하여 구현하기","title":"[Python] Discord Webhook으로 학습 종료 시 알림 보내기"},{"content":"Tensorflow나 Pytorch로 모델 학습을 진행할 때 학습이 완료되면 알림을 받으면 굉장히 유용할 것 같지 않은가? 여러 모듈을 찾아본 결과 가장 간단한 것을 찾았다. pip install py-notifier Windows, Linux, MacOs에서 사용 가능하다.\nRequirements  Windows: pip install win10toast Linux: sudo apt=get install libnotify-bin MacOs: pip install pync  Example from pynotifier import Notification Notification( title=\u0026#39;Notification Title\u0026#39;, description=\u0026#39;Notification Description\u0026#39;, icon_path=\u0026#39;/absolute/path/to/image/icon.png\u0026#39;, # On Windows .ico is required, on Linux - .png duration=5, # Duration in seconds urgency=\u0026#39;normal\u0026#39; ).send() 아쉬운 점  Mac에서만 테스트해본 결과 알림 소리가 안난다. 사운드가 필요한 경우 추가적인 모듈을 활용하면 많이 있을듯. 원격 서버에서 로컬 컴퓨터로 알림 보내기는 당연히 안된다.  개선 계획  추가 예정  ","permalink":"https://verssae.github.io/posts/py-notifier/","summary":"Python으로 데스크톱 푸시 알림을 보내보자","title":"[Python] 데스크톱 알림 보내기"},{"content":"ASE 2020\n Title 및 Abstract만 보고 관심 분야에 해당하거나 흥미로운 논문들을 나열해보았다.\n 나의 관심 분야  Method name suggestion Test using RL Code smell \u0026amp; Refactoring  Multi-task learning based pre-trained language model for code completion 코드 자동 완성을 위해 코드 이해와 생성을 목표로 Transformer기반 아키텍처로 멀티 태스크 언어 모델을 전이 학습함.\nDeepTC-enhancer: improving the readability of automatically generated tests 템플릿 기반 방법과 딥러닝으로 테스트 케이스 자연어 패턴에서 도출한 테스트 케이스 시나리오와 의미 있는 식별자 및 메서드 이름을 자동으로 생성하여 자동으로 생성된 테스트 케이스의 가독성을 크게 향상시킴\nEvaluating representation learning of code changes for predicting patch correctness in program repair 유사성 계산에 적합한 임베딩을 얻기 위해 코드 변경에 대한 다양한 representation learning 조사\nA deep multitask learning approach for requirements discovery and annotation from open forum 멀티태스킹 학습으로 대규모 문제 보고서에서 요구사항을 발견하고 자동화된 요구사항 분석을 지원하는 문장에 주석을 다는 효과적인 방법을 제공\nWhere shall we log?: studying and suggesting logging locations in code blocks 소스코드에서 로그를 남길 위치를 제안하는 DNN 프레임워크를 제안\nRepoSkillMiner: identifying software expertise from GitHub repositories using natural language processing Github 커밋을 분석하여 개발자의 숙련도를 추출하는 프레임워크\nMetPurity: a learning-based tool of pure method identification for automatic test generation 순수 메소드 식별 분류기를 Random Forest를 사용해 만들어 회귀 테스트에서 assertion을 더 많이 생성할 수 있었음\n그닥 재밌어 보이는 게 없다\u0026hellip;ㅠㅠ\n","permalink":"https://verssae.github.io/posts/ase2020trend/","summary":"ASE 2020 논문들의 타이틀 및 초록을 보고 트렌드를 파악한다.","title":"ASE 2020 트렌드 조사"},{"content":"ASE 2021\n Title 및 Abstract만 보고 관심 분야에 해당하거나 흥미로운 논문들을 나열해보았다.\n 나의 관심 분야  Method name suggestion Test using RL Code smell \u0026amp; Refactoring  Deep GUI: Black-box GUI Input Generation with Deep Learning Black-box 안드로이드 테스트 도구인 Google Monkey의 무작위 테스트 입력 생성 기술 대신 딥러닝을 사용한 GUI 상호 작용 모델로 세부 정보 필요 없이 테스트 중인 앱에 대한 효과적인 입력을 생성할 수 있도록 함\nDeepCVA: Automated Commit-level Vulnerability Assessment with Deep Multi-task Learning 커밋에서 소프트웨어 취약점(SV)를 식별하는 딥러닝 모델 제안\nDeepMetis: Augmenting a Deep Learning Test Set to Increase its Mutation Score 딥러닝 테스트 데이터의 적절성은 돌연변이를 감지하는 능력으로 평가할 수 있는데, 이 능력이 증가하도록 새로운 테스트 입력을 자동으로 생성하는 검색 기반 알고리즘 제안\nEditSum: A Retrieve-and-Edit Framework for Source Code Summarization 코드 요약은 패턴화된 단어와 코드의 기능을 반영하는 키워드 예측이 필요하나 최신 방식은 키워드 예측 성능이 좋지 않음. 이 문제를 완화하고자 프로토타입 요약을 먼저 학습하고 프로토타입의 패턴을 입력 코드의 의미 정보와 결합하는 EditSum 접근법을 제시함. 유사한 코드 조각의 요약이 종종 동일한 패턴을 가지기 때문에 생성된 프로토타입이 요약 결과를 위한 좋은 시작점을 제공한다는 것이다.\nEfficient state synchronisation in model-based testing through reinforcement learning 모델 기반 테스트에서 시퀀스 동기화를 통해 시스템을 알려진 상태로 만들기 위한 새로운 Q러닝 알고리즘을 제안\nFIGCPS: Effective Failure-inducing Input Generation for Cyber-Physical Systems with Deep Reinforcement Learning 심층강화학습으로 CPS에서 실패 유도 테스트 입력 생성 접근법을 제안\nFRUGAL: Unlocking Semi-supervised Learning for Software Analytics 커밋 라벨링을 반지도 학습\nIntelligent Change Operators for Multi-Objective Refactoring 여러 리팩토링을 함께 적용하는 지능형 변경 연산자를 제안하여 다중 목표 검색 알고리즘에 통합하여 상충되는 품질 문제를 해결하는 유효한 리팩토링 달성\nOn Multi-Modal Learning of Editing Source Code 신경 기계 번역기(NMT)에 편집할 위치, 코드 컨텍스트, 커밋 메시지의 3가지 정보를 활용하여 멀티모달 NMT기반 코드 편집 엔진 구축\nThinking Like a Developer? Comparing the Attention of Humans with Neural Models of Code 코드에 대한 신경 모델의 어텐션 가중치와 전문가의 추론과 어느정도 일치하는지 조사하여 인간 어텐션 맵을 수집\n","permalink":"https://verssae.github.io/posts/ase2021trend/","summary":"ASE 2021 논문들의 타이틀 및 초록을 보고 트렌드를 파악한다.","title":"ASE 2021 트렌드 조사"},{"content":" A blog powered by HUGO\n Requirements  golang hugo  brew install hugo Installation  Clone submodules (public, themes/PaperMod)  git submodule update --init git submodule foreach checkout main New Post hugo new posts/\u0026lt;title.md\u0026gt; Run server hugo server -D Compile hugo -t PaperMod Publish cd public git add * git commit git push origin main Notices  When you want to commit, commit submodules first  ","permalink":"https://verssae.github.io/posts/hugo/","summary":"Hugo로 블로그 만들기","title":"Hugo-blog (README)"},{"content":" 로컬 호스트에 키 생성  $ ssh-keygen 원격 호스트에 public key 복사  $ ssh-copy-id -i ~/.ssh/id_rsa.pub \u0026lt;username\u0026gt;@\u0026lt;remote-server\u0026gt; 로컬 호스트에서 원격 호스트로 ssh 접속  $ ssh \u0026lt;remote-server\u0026gt; ","permalink":"https://verssae.github.io/posts/ssh/","summary":"ssh로 원격 서버에 편하게 접속하게 만들기","title":"SSH 접속하기"}]